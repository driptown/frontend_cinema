[{"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\index.js":"1","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\App.js":"3","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Header.jsx":"4","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Footer.jsx":"5","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\Router.jsx":"6","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\store\\store.js":"7","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\posts\\reducers.js":"8","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\posts\\actions.js":"9","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\store\\initialState.js":"10","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Categories.jsx":"11","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Home.jsx":"12","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Favourite.jsx":"13","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\API.js":"14","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Mainimage.jsx":"15","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Preview.jsx":"16","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\selectors.js":"17","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\operations.js":"18","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\movies\\store\\selectors.js":"19","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\action.js":"20","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Footer.jsx":"21","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\reducers.js":"22","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\reducers.js":"23","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Preview.jsx":"24","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\actions.js":"25","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\selectors.js":"26","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\MainImage.jsx":"27","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Header.jsx":"28"},{"size":813,"mtime":1673393041303,"results":"29","hashOfConfig":"30"},{"size":404,"mtime":1673393041357,"results":"31","hashOfConfig":"30"},{"size":267,"mtime":1673393041187,"results":"32","hashOfConfig":"30"},{"size":919,"mtime":1673389651105,"results":"33","hashOfConfig":"30"},{"size":923,"mtime":1673389616750,"results":"34","hashOfConfig":"30"},{"size":612,"mtime":1673393041241,"results":"35","hashOfConfig":"30"},{"size":706,"mtime":1673393044698,"results":"36","hashOfConfig":"30"},{"size":839,"mtime":1673378118888,"results":"37","hashOfConfig":"30"},{"size":471,"mtime":1673378118772,"results":"38","hashOfConfig":"30"},{"size":301,"mtime":1673393044644,"results":"39","hashOfConfig":"30"},{"size":12098,"mtime":1673393043996,"results":"40","hashOfConfig":"30"},{"size":6889,"mtime":1673393044096,"results":"41","hashOfConfig":"30"},{"size":3135,"mtime":1673393044042,"results":"42","hashOfConfig":"30"},{"size":2630,"mtime":1673393041125,"results":"43","hashOfConfig":"30"},{"size":1377,"mtime":1672958906937,"results":"44","hashOfConfig":"30"},{"size":2342,"mtime":1673383914453,"results":"45","hashOfConfig":"30"},{"size":187,"mtime":1673393044366,"results":"46","hashOfConfig":"30"},{"size":1271,"mtime":1673393044265,"results":"47","hashOfConfig":"30"},{"size":165,"mtime":1672937560981,"results":"48","hashOfConfig":"30"},{"size":566,"mtime":1673393044212,"results":"49","hashOfConfig":"30"},{"size":617,"mtime":1673466134456,"results":"50","hashOfConfig":"30"},{"size":392,"mtime":1673393044528,"results":"51","hashOfConfig":"30"},{"size":660,"mtime":1673393044312,"results":"52","hashOfConfig":"30"},{"size":2300,"mtime":1673393043947,"results":"53","hashOfConfig":"30"},{"size":170,"mtime":1673393044428,"results":"54","hashOfConfig":"30"},{"size":159,"mtime":1673393044582,"results":"55","hashOfConfig":"30"},{"size":1345,"mtime":1673393043893,"results":"56","hashOfConfig":"30"},{"size":891,"mtime":1673393043842,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1sfsc2j",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\App.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Header.jsx",["154","155"],[],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport IconLogo from '../../assets/img/icon-logo.png';\r\nimport { push } from 'connected-react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <img class=\"logo\" src={IconLogo} onClick={() => navigate('/')} alt=\"\" />\r\n                <div class=\"side-head\">\r\n                    <div class=\"search\">\r\n                        <input type=\"text\" />\r\n                    </div>\r\n                    <div class=\"option\">\r\n                        <p onClick={() => navigate('/categories')}>Category</p>\r\n                        <p onClick={() => navigate('/favourites')}>Add to Wishlist</p>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Footer.jsx",["156","157"],[],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport IconLogo from '../../src/assets/img/icon-logo.png';\r\nimport { push } from 'connected-react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <img class=\"logo\" src={IconLogo} onClick={() => navigate('/')} alt=\"\" />\r\n                <div class=\"side-head\">\r\n                    <div class=\"search\">\r\n                        <input type=\"text\" />\r\n                    </div>\r\n                    <div class=\"option\">\r\n                        <p onClick={() => navigate('/categories')}>Category</p>\r\n                        <p onClick={() => navigate('/favourites')}>Add to Wishlist</p>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\Router.jsx",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\store\\store.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\posts\\reducers.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\posts\\actions.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\store\\initialState.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Categories.jsx",["158","159","160","161","162","163","164","165","166","167"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport Header from '../components/Header';\r\nimport { getMovies } from '../reducks/favourites/movies/store/selectors';\r\nimport API from '../API';\r\nimport { getFavourites } from '../reducks/favourites/selectors';\r\nimport { addFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport Img29 from '../images/icon-fav.png';\r\nimport Preview from '../components/Preview'\r\n\r\nconst api = new API();\r\n\r\nconst Categories = () => {\r\n    const [categoryNewlyReleased, setCategoryNewlyReleased] = useState(null);\r\n    const [categoryAnimated, setCategoryAnimated] = useState(null);\r\n    const [categoryRomance, setCategoryRomance] = useState(null);\r\n    const [categoryCrime, setCategoryCrime] = useState(null);\r\n    const [showPreview, setShowPreview] = useState(false);\r\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\r\n\r\n    const selector = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const movies = getMovies(selector);\r\n    const favourites = getFavourites(selector);\r\n    const clickfav = movie => {\r\n        dispatch(addFavourite(movie));\r\n    };\r\n    const clickMovie = movieId => {\r\n        setSelectedMovieId(movieId);\r\n        setShowPreview(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchFromLocalStorage);\r\n        api.getMovies({ category_id: '1' })\r\n            .then(movies => {\r\n                setCategoryNewlyReleased(movies);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to connect API: /movies/');\r\n            });\r\n        api.getMovies({ category_id: '2' })\r\n            .then(movies => {\r\n                setCategoryAnimated(movies);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to connect API: /movies/');\r\n            });\r\n        api.getMovies({ category_id: '3' })\r\n            .then(movies => {\r\n                setCategoryRomance(movies);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to connect API: /movies/');\r\n            });\r\n        api.getMovies({ category_id: '4' })\r\n            .then(movies => {\r\n                setCategoryCrime(movies);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to connect API: /movies/');\r\n            });\r\n    }, []);\r\n    return (\r\n        <>\r\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\r\n            <section>\r\n                <Header />\r\n\r\n                <div class=\"list\">\r\n                    <div class=\"left\">\r\n                        <div class=\"newly-rel\">\r\n                            <hr />\r\n                            <h2>Newly Released</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    {categoryNewlyReleased && categoryNewlyReleased.results.length > 0 ? (\r\n                        <ul>\r\n                            {categoryNewlyReleased.results.map(movie => (\r\n                                <li>\r\n                                    <div class=\"card\">\r\n                                        {movie &&\r\n                                            Object.values(favourites).filter(\r\n                                                favoriteMovie => movie.id == favoriteMovie.id\r\n                                            ).length === 0 && (\r\n                                                <img\r\n                                                    class=\"fav\"\r\n                                                    onClick={() => {\r\n                                                        clickfav(movie);\r\n                                                    }}\r\n                                                    src={Img29}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n                                        <img\r\n                                            onClick={() => clickMovie(movie.id)}\r\n                                            class=\"image\"\r\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <h1>{movie.name}</h1>\r\n                                    <p>TV-MA | Action, Crime</p>\r\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <div class=\"no-post\">\r\n                            <p>No movies here yet...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div class=\"list\">\r\n                    <div class=\"left\">\r\n                        <div class=\"newly-rel\">\r\n                            <hr />\r\n                            <h2>Animated</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    {categoryAnimated && categoryAnimated.results.length > 0 ? (\r\n                        <ul>\r\n                            {categoryAnimated.results.map(movie => (\r\n                                <li>\r\n                                    <div class=\"card\">\r\n                                        {movie &&\r\n                                            Object.values(favourites).filter(\r\n                                                favoriteMovie => movie.id == favoriteMovie.id\r\n                                            ).length === 0 && (\r\n                                                <img\r\n                                                    class=\"fav\"\r\n                                                    onClick={() => {\r\n                                                        clickfav(movie);\r\n                                                    }}\r\n                                                    src={Img29}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n                                        <img\r\n                                            onClick={() => clickMovie(movie.id)}\r\n                                            class=\"image\"\r\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <h1>{movie.name}</h1>\r\n                                    <p>TV-MA | Action, Crime</p>\r\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <div class=\"no-post\">\r\n                            <p>No movies here yet...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div class=\"list\">\r\n                    <div class=\"left\">\r\n                        <div class=\"newly-rel\">\r\n                            <hr />\r\n                            <h2>Romance</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    {categoryRomance && categoryRomance.results.length > 0 ? (\r\n                        <ul>\r\n                            {categoryRomance.results.map(movie => (\r\n                                <li>\r\n                                    <div class=\"card\">\r\n                                        {movie &&\r\n                                            Object.values(favourites).filter(\r\n                                                favoriteMovie => movie.id == favoriteMovie.id\r\n                                            ).length === 0 && (\r\n                                                <img\r\n                                                    class=\"fav\"\r\n                                                    onClick={() => {\r\n                                                        clickfav(movie);\r\n                                                    }}\r\n                                                    src={Img29}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n                                        <img\r\n                                            onClick={() => clickMovie(movie.id)}\r\n                                            class=\"image\"\r\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <h1>{movie.name}</h1>\r\n                                    <p>TV-MA | Action, Crime</p>\r\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <div class=\"no-post\">\r\n                            <p>No movies here yet...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div class=\"list\">\r\n                    <div class=\"left\">\r\n                        <div class=\"newly-rel\">\r\n                            <hr />\r\n                            <h2>Crime</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    {categoryCrime && categoryCrime.results.length > 0 ? (\r\n                        <ul>\r\n                            {categoryCrime.results.map(movie => (\r\n                                <li>\r\n                                    <div class=\"card\">\r\n                                        {movie &&\r\n                                            Object.values(favourites).filter(\r\n                                                favoriteMovie => movie.id == favoriteMovie.id\r\n                                            ).length === 0 && (\r\n                                                <img\r\n                                                    class=\"fav\"\r\n                                                    onClick={() => {\r\n                                                        clickfav(movie);\r\n                                                    }}\r\n                                                    src={Img29}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            )}\r\n                                        <img\r\n                                            onClick={() => clickMovie(movie.id)}\r\n                                            class=\"image\"\r\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <h1>{movie.name}</h1>\r\n                                    <p>TV-MA | Action, Crime</p>\r\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <div class=\"no-post\">\r\n                            <p>No movies here yet...</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Categories;","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Home.jsx",["168","169","170","171"],[],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IconLeft from '../assets/img/icon-left.svg';\nimport IconRight from '../assets/img/icon-right.svg';\nimport { getMovies } from '../reducks/movies/selectors';\nimport API from '../API';\nimport MainImage from '../components/common/MainImage';\nimport { getFavourites } from '../reducks/favourites/selectors';\nimport { addFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\nimport Preview from '../components/common/Preview';\nimport { useDispatch } from 'react-redux';\nimport IconFav from '../assets/img/icon-fav.png';\n\n\n\n\nconst api = new API();\nconst Home = () => {\n    const [moviesComingSoon, setMoviesCommingSoon] = useState(null);\n    const [moviesNewReleased, setMoviesNewReleased] = useState(null);\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\n    const [showPreview, setShowPreview] = useState(false);\n    const selector = useSelector(state => state);\n    const dispatch = useDispatch();\n    const movies = getMovies(selector);\n    const favourites = getFavourites(selector);\n    const clickfav = movie => {\n        dispatch(addFavourite(movie));\n    };\n    const clickMovie = movieId => {\n        setSelectedMovieId(movieId);\n        setShowPreview(true);\n    };\n    \n    useEffect(() => {\n        dispatch(fetchFromLocalStorage);\n        api.getMovies({ release_type: 'Coming Soon' })\n            .then(movies => {\n                setMoviesCommingSoon(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n        api.getMovies({ release_type: 'Newly Released' })\n            .then(movies => {\n                setMoviesNewReleased(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n    }, [movies]);\n\n    return (\n        <>\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\n            <section>\n                <MainImage />\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Newly Released</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <ul>\n                        {moviesNewReleased && moviesNewReleased.results.length > 0 ? (\n                            moviesNewReleased.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                        {console.log(movie.image_mobile)}\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n\n                                </li>\n                            ))\n                        ) : (\n                            <p>No movies here yet...</p>\n                        )}\n                    </ul>\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Upcoming Movies</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <ul>\n                        {moviesComingSoon && moviesComingSoon.results.length > 0 ? (\n                            moviesComingSoon.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            favourites &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n\n                                </li>\n                            ))\n                        ) : (\n                            <p>No movies here yet...</p>\n                        )}\n                    </ul>\n                </div>\n            </section>\n        </>\n    );\n\n};\n\n\nexport default Home;\n","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\containers\\Favourite.jsx",["172"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\r\nimport { getFavourites } from '../reducks/favourites/selectors';\r\nimport IconFav from '../images/icon-fav.png';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Preview from '../components/Preview';\r\n\r\n\r\nfunction Favourite() {\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(state => state);\r\n    const [showPreview, setShowPreview] = useState(false);\r\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\r\n    const favourites = getFavourites(selector);\r\n    const clickMovie = movieId => {\r\n        setSelectedMovieId(movieId);\r\n        setShowPreview(true);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(fetchFromLocalStorage());\r\n    });\r\n    return (\r\n        <>\r\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\r\n            <section>\r\n                <Header />\r\n                <div class=\"list\">\r\n                    <div class=\"left\">\r\n                        <div class=\"newly-rel\">\r\n                            <hr />\r\n                            <h2>Newly Released</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <ul>\r\n                        {favourites && favourites.length > 0 ? (\r\n                            favourites.map(favourite => (\r\n                                <li>\r\n                                    <div class=\"card\">\r\n                                        <img\r\n                                            class=\"fav\"\r\n                                            onClick={() => {\r\n                                                dispatch(deleteFavourite(favourite.id));\r\n                                            }}\r\n                                            src={IconFav}\r\n                                            alt=\"\"\r\n                                        />\r\n                                        <img\r\n                                            onClick={() => clickMovie(favourite.id)}\r\n                                            class=\"image\"\r\n                                            src={'https://res.cloudinary.com/dmhdtstvg/' + favourite.image_mobile}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <h1>{favourite.name}</h1>\r\n                                    <p>TV-MA | Action, Crime</p>\r\n                                    <a href={favourite.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\r\n                                </li>\r\n                            ))\r\n                        ) : (\r\n                            <p>No movies here yet...</p>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n<Footer />\r\n\r\nexport default Favourite;","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\API.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Mainimage.jsx",["173"],[],"import React from 'react';\r\nimport Header from '../components/Header';\r\nimport ImgBackground from '../images/ice_age2bg.png';\r\n\r\n\r\nfunction MainImage() {\r\n    return (\r\n        <>\r\n            <div class=\"main-image\">\r\n                <Header />\r\n                <img style={{ width: '100%' }} src={ImgBackground} alt=\"\" />\r\n                <div class=\"text\">\r\n                    <h1>ICE AGE</h1>\r\n                    <p>\r\n                        With global warming threatening their <br />\r\n                        once-icy domain with widespread flooding,\r\n                        <br />\r\n                        Manny (Ray Romano), Sid (John Alberto\r\n                        <br />\r\n                        Leguizamo) and Diego (Denis Leary)\r\n                        <br />\r\n                        set out to find a safe haven. Along the way,\r\n                        <br />\r\n                        another mammoth Queen Latifah),\r\n                        <br />\r\n                        who thinks she is an opossum,\r\n                        <br />\r\n                        joins the travellers on their perilous quest.\r\n                    </p>\r\n                   <a href=\"https://www.youtube.com/watch?v=lr_spVswTUo&vl=en\" target=\"_blank\"><button>Watch Now</button></a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainImage;","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\Preview.jsx",["174","175","176","177"],[],"import React, { useState, useEffect } from 'react';\r\nimport API from '../API';\r\nimport { useDispatch } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport CloseButtton from '../images/close.png';\r\n\r\nconst api = new API();\r\n\r\nconst Preview = ({ setShowPreview, selectedMovieId }) => {\r\n    const [movie, setMovie] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        api.getMovie(selectedMovieId)\r\n            .then(movie => {\r\n                setMovie(movie);\r\n            })\r\n            .catch(error => {\r\n                alert('Faild to connect API: /movie/:id/');\r\n            });\r\n    }, []);\r\n\r\n    console.log('movie', movie);\r\n\r\n    return (\r\n        <>\r\n            <section class=\"preview\">\r\n                {movie && (\r\n                    <div class=\"opecity\">\r\n                        <img class=\"icon-close\" src={CloseButtton} onClick={() => setShowPreview(false)} alt=\"\" />\r\n                        <img class=\"background2\" src={movie.image} alt=\"\" />\r\n                        <div class=\"preview-content\">\r\n                            <div class=\"preview-img\">\r\n                                <img class=\"preview\" src={movie.image} alt=\"\" />\r\n                            </div>\r\n                            <div class=\"preview-text\">\r\n                                <h1>{movie.name}</h1>\r\n                                <p>Movie</p>\r\n                                <h4>{movie.rating}</h4>\r\n                                <p>{movie.movie_duration} Minutes - USA</p>\r\n                                <div class=\"preview-buttons\">\r\n                                    <button>Action</button>\r\n                                    <button>Crime</button>\r\n                                    <button>Romance</button>\r\n                                    <button>Fantasy</button>\r\n                                    <button>Thriller</button>\r\n                                </div>\r\n                                <p>{movie.description}</p>\r\n                                <a href={movie.trailer_link} target=\"_blank\"><button class=\"preview-play\">Watch Trailer</button></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Preview;","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\selectors.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\operations.js",["178","179"],[],"import API from '../../API';\r\nimport { addFavouritesAction, deleteFavouritesAction, fetchFavouritesAction } from './action';\r\n\r\nconst api = new API();\r\nconst FAVOURITES_KEY = 'FAVOURITES_KEY';\r\n\r\nexport const fetchFromLocalStorage = () => {\r\n    return async dispatch => {\r\n        let favouritesJSON = localStorage.getItem(FAVOURITES_KEY);\r\n        let favourites = [];\r\n        if (favouritesJSON) {\r\n            favourites = JSON.parse(favouritesJSON);\r\n        }\r\n        dispatch(fetchFavouritesAction(favourites));\r\n    };\r\n};\r\n\r\nexport const addFavourite = image => {\r\n    return async (dispatch, getState) => {\r\n        let prevFavourites = getState().favourites.list;\r\n        const nextFavourites = [image, ...prevFavourites];\r\n        setToLocalStorage(nextFavourites);\r\n        dispatch(addFavouritesAction(nextFavourites));\r\n    };\r\n};\r\n\r\nexport const deleteFavourite = id => {\r\n    return async (dispatch, getState) => {\r\n        let prevFavourites = getState().favourites.list;\r\n        const nextFavourites = prevFavourites.filter(image => image.id != id);\r\n        setToLocalStorage(nextFavourites);\r\n        dispatch(deleteFavouritesAction(nextFavourites));\r\n    };\r\n};\r\n\r\nconst setToLocalStorage = favourites => {\r\n    localStorage.setItem(FAVOURITES_KEY, JSON.stringify(favourites));\r\n};","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\movies\\store\\selectors.js",["180"],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\action.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Footer.jsx",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\reducers.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\favourites\\reducers.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Preview.jsx",["181","182","183","184"],[],"import React, { useState, useEffect } from 'react';\nimport API from '../../API';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport CloseButtton from '../../assets/img/icon-close.png';\n\nconst api = new API();\n\nconst Preview = ({ setShowPreview, selectedMovieId }) => {\n    const [movie, setMovie] = useState(null);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        api.getMovie(selectedMovieId)\n            .then(movie => {\n                setMovie(movie);\n            })\n            .catch(error => {\n                alert('Faild to connect API: /movie/:id/');\n            });\n    }, []);\n\n    console.log('movie', movie);\n\n    return (\n        <>\n            <section class=\"preview\">\n                {movie && (\n                    <div class=\"opecity\">\n                        <img class=\"icon-close\" src={CloseButtton} onClick={() => setShowPreview(false)} alt=\"\" />\n                        <img class=\"background2\" src={movie.image} alt=\"\" />\n                        <div class=\"preview-content\">\n                            <div class=\"preview-img\">\n                                <img class=\"preview\" src={movie.image} alt=\"\" />\n                            </div>\n                            <div class=\"preview-text\">\n                                <h1>{movie.name}</h1>\n                                <p>Movie</p>\n                                <h4>{movie.rating}</h4>\n                                <p>{movie.movie_duration} Minutes - USA</p>\n                                <div class=\"preview-buttons\">\n                                    <button>Action</button>\n                                    <button>Crime</button>\n                                    <button>Romance</button>\n                                    <button>Fantasy</button>\n                                    <button>Thriller</button>\n                                </div>\n                                <p>{movie.description}</p>\n                                <a href={movie.trailer_link} target=\"_blank\"><button class=\"preview-play\">Watch Trailer</button></a>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </section>\n        </>\n    );\n};\n\nexport default Preview;\n","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\actions.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\reducks\\movies\\selectors.js",[],[],"C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\MainImage.jsx",["185"],[],"import React from 'react';\nimport Header from '../common/Header';\nimport ImgBackground from '../../assets/img/Group 2218.png';\n\n\nfunction MainImage() {\n    return (\n        <>\n            <div class=\"main-image\">\n                <Header />\n                <img style={{ width: '100%' }} src={ImgBackground} alt=\"\" />\n                <div class=\"text\">\n                    <h1>ICE AGE</h1>\n                    <p>\n                        With global warming threatening their <br />\n                        once-icy domain with widespread flooding,\n                        <br />\n                        Manny (Ray Romano), Sid (John Alberto\n                        <br />\n                        Leguizamo) and Diego (Denis Leary)\n                        <br />\n                        set out to find a safe haven. Along the way,\n                        <br />\n                        another mammoth Queen Latifah),\n                        <br />\n                        who thinks she is an opossum,\n                        <br />\n                        joins the travellers on their perilous quest.\n                    </p>\n                   <a href=\"https://www.youtube.com/watch?v=lr_spVswTUo&vl=en\" target=\"_blank\"><button>Watch Now</button></a>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MainImage;\n","C:\\Users\\Jacob\\Desktop\\cinema\\frontend\\src\\components\\common\\Header.jsx",["186","187"],[],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport IconLogo from '../../assets/img/icon-logo.svg';\nimport { push } from 'connected-react-router';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Header() {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <header>\n                <img class=\"logo\" src={IconLogo} onClick={() => navigate('/')} alt=\"\" />\n                <div class=\"side-head\">\n                    <div class=\"search\">\n                        <input type=\"text\" />\n                    </div>\n                    <div class=\"option\">\n                        <p onClick={() => navigate('/categories')}>Category</p>\n                        <p onClick={() => navigate('/favourites')}>Add to Wishlist</p>\n                    </div>\n                </div>\n            </header>\n        </>\n    );\n}\n\nexport default Header;\n",{"ruleId":"188","severity":1,"message":"189","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"192","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"192","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"193","line":24,"column":11,"nodeType":"190","messageId":"191","endLine":24,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":64,"column":8,"nodeType":"196","endLine":64,"endColumn":10,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":86,"column":75,"nodeType":"200","messageId":"201","endLine":86,"endColumn":77},{"ruleId":"202","severity":1,"message":"203","line":106,"column":37,"nodeType":"204","messageId":"205","endLine":106,"endColumn":82,"fix":"206"},{"ruleId":"198","severity":1,"message":"199","line":132,"column":75,"nodeType":"200","messageId":"201","endLine":132,"endColumn":77},{"ruleId":"202","severity":1,"message":"203","line":152,"column":37,"nodeType":"204","messageId":"205","endLine":152,"endColumn":82,"fix":"207"},{"ruleId":"198","severity":1,"message":"199","line":178,"column":75,"nodeType":"200","messageId":"201","endLine":178,"endColumn":77},{"ruleId":"202","severity":1,"message":"203","line":198,"column":37,"nodeType":"204","messageId":"205","endLine":198,"endColumn":82,"fix":"208"},{"ruleId":"198","severity":1,"message":"199","line":224,"column":75,"nodeType":"200","messageId":"201","endLine":224,"endColumn":77},{"ruleId":"202","severity":1,"message":"203","line":244,"column":37,"nodeType":"204","messageId":"205","endLine":244,"endColumn":82,"fix":"209"},{"ruleId":"194","severity":1,"message":"195","line":52,"column":8,"nodeType":"196","endLine":52,"endColumn":16,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"203","line":95,"column":37,"nodeType":"204","messageId":"205","endLine":95,"endColumn":82,"fix":"211"},{"ruleId":"198","severity":1,"message":"199","line":121,"column":75,"nodeType":"200","messageId":"201","endLine":121,"endColumn":77},{"ruleId":"202","severity":1,"message":"203","line":141,"column":37,"nodeType":"204","messageId":"205","endLine":141,"endColumn":82,"fix":"212"},{"ruleId":"202","severity":1,"message":"203","line":60,"column":37,"nodeType":"204","messageId":"205","endLine":60,"endColumn":86,"fix":"213"},{"ruleId":"202","severity":1,"message":"203","line":30,"column":20,"nodeType":"204","messageId":"205","endLine":30,"endColumn":96,"fix":"214"},{"ruleId":"188","severity":1,"message":"192","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"215","line":11,"column":11,"nodeType":"190","messageId":"191","endLine":11,"endColumn":19},{"ruleId":"194","severity":1,"message":"216","line":21,"column":8,"nodeType":"196","endLine":21,"endColumn":10,"suggestions":"217"},{"ruleId":"202","severity":1,"message":"203","line":49,"column":33,"nodeType":"204","messageId":"205","endLine":49,"endColumn":78,"fix":"218"},{"ruleId":"188","severity":1,"message":"219","line":4,"column":7,"nodeType":"190","messageId":"191","endLine":4,"endColumn":10},{"ruleId":"198","severity":1,"message":"220","line":30,"column":72,"nodeType":"200","messageId":"201","endLine":30,"endColumn":74},{"ruleId":"221","severity":2,"message":"222","line":5,"column":26,"nodeType":"190","messageId":"223","endLine":5,"endColumn":40},{"ruleId":"188","severity":1,"message":"192","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"215","line":11,"column":11,"nodeType":"190","messageId":"191","endLine":11,"endColumn":19},{"ruleId":"194","severity":1,"message":"216","line":21,"column":8,"nodeType":"196","endLine":21,"endColumn":10,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"203","line":49,"column":33,"nodeType":"204","messageId":"205","endLine":49,"endColumn":78,"fix":"225"},{"ruleId":"202","severity":1,"message":"203","line":30,"column":20,"nodeType":"204","messageId":"205","endLine":30,"endColumn":96,"fix":"226"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"192","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":14},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'push' is defined but never used.","'movies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["227"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"228","text":"229"},{"range":"230","text":"229"},{"range":"231","text":"229"},{"range":"232","text":"229"},["233"],{"range":"234","text":"229"},{"range":"235","text":"229"},{"range":"236","text":"229"},{"range":"237","text":"229"},"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedMovieId'. Either include it or remove the dependency array.",["238"],{"range":"239","text":"229"},"'api' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-undef","'createSelector' is not defined.","undef",["240"],{"range":"241","text":"229"},{"range":"242","text":"229"},{"desc":"243","fix":"244"},[4694,4694]," rel=\"noreferrer\"",[7106,7106],[9514,9514],[11914,11914],{"desc":"245","fix":"246"},[4280,4280],[6685,6685],[2820,2820],[1249,1249],{"desc":"247","fix":"248"},[2094,2094],{"desc":"247","fix":"249"},[2061,2061],[1223,1223],"Update the dependencies array to be: [dispatch]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, movies]",{"range":"252","text":"253"},"Update the dependencies array to be: [selectedMovieId]",{"range":"254","text":"255"},{"range":"256","text":"255"},[2422,2424],"[dispatch]",[1934,1942],"[dispatch, movies]",[653,655],"[selectedMovieId]",[648,650]]